import chromadb
from chromadb.utils.embedding_functions import SentenceTransformerEmbeddingFunction
from helper_utility import tokenizer, extract_text_from_pdfs, clean_texts

embedding_function = SentenceTransformerEmbeddingFunction() # transformer : all-mini-embedding-v2 as default 
chroma_client = chromadb.PersistentClient(path="db")
collection = chroma_client.get_or_create_collection(name="data", embedding_function=embedding_function, metadata={"hnsw:space": "cosine"})

print("Extracting PDF Data .......")
english1 = extract_text_from_pdfs("data/SCERT Kerala State Syllabus 10th Standard Biology Textbooks English Medium Part 1.pdf")
english2 = extract_text_from_pdfs("data/SCERT Kerala State Syllabus 10th Standard Biology Textbooks English Medium Part 2.pdf")
biology1 = extract_text_from_pdfs("data\SCERT Kerala State Syllabus 10th Standard Biology Textbooks English Medium Part 1.pdf")
biology2 = extract_text_from_pdfs("data\SCERT Kerala State Syllabus 10th Standard Biology Textbooks English Medium Part 2.pdf")
socialscience1 = extract_text_from_pdfs("data\SocialScience1_Eng_1.pdf")
socialscience2 = extract_text_from_pdfs("data/SocialScience1_Eng_2.pdf")
socialscience3 = extract_text_from_pdfs("data/SocialScience2_Eng_1.pdf")
socialscience4 = extract_text_from_pdfs("data\SS2_English_2.pdf")
print(f"Extracted PDF data \n Number of PDF files Extracted : 9")

# Preprocess and clean texts
print(f"Preprocessing and cleaning extracted PDF data")
substrings_to_remove = [
    "Social Science IX\n",
    "Social Science I",
    "1234567890",
    "\x01",
    "..",
    "Standard\n",
    "□",
    "1212121 2123456789\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1212121 2123456789\n1212121 2123456789\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1 23456789012121212 12345678 9\n1212121 2123456789\n"
]
socialscience1 = clean_texts(socialscience1, substrings_to_remove, delete_list=[0,1,2,3,5])

substrings_to_remove = [
    "Social Science IX\nStandard\n",
    "Social Science I X\nStandard\n",
    "\uf034",
    "\x01",
    "1234567890",
    "23456789012121212",
    "12345678",
    "9\n1",
    "□",
    "\n1 9",
    "1212121 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n12121212\n12121212 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n12121212\n",
    "1212121 2                                                                                                                                                                                                                                                                                        21212122121212                                                                                                                                                                                                        21212129\n"]
l = len(socialscience2)
socialscience2 = clean_texts(socialscience2, substrings_to_remove, delete_list=[0,1,2,3,5,l-2,l-3,l-4,l-5,l-6])

substrings_to_remove = [
    "Standard X\n",
    "\nSocial Science II\n",
    "\uf034",
    "\x01",
    ".."
]
l = len(socialscience3)
socialscience3 = clean_texts(socialscience3, substrings_to_remove, delete_list=[0,1,2,3,5, l-1, l-2, l-3, l-4, l-5])

substrings_to_remove = [
    "\nStandard - X\n",
    "Social science - II\n",
    "\nSocial Science II\n",
    "St andard X\n",
    "\uf034",
    "\x01",
    ".."
]
l = len(socialscience4)
socialscience4 = clean_texts(socialscience4, substrings_to_remove, delete_list=[0,1,2,3,5, l-1, l-2, l-3, l-4, l-5, l-6, l-7])

substrings_to_remove = [
    "Std X\n",
    "\nEnglish\n",
    "__",
    ".."
]
english1 = clean_texts(english1, substrings_to_remove, delete_list=[0,1,2,3])

substrings_to_remove = [
    "Std X\n",
    "English\n",
    "__",
    ".."
]
english2 = clean_texts(english2, substrings_to_remove, delete_list=[0,1,2,3])

substrings_to_remove = [
    "Biology - X",
    "NT-885-2-Biology-10-(E)-Vol-1",
    "NT-885-2-Biology-10-(E)-Vol-2",
    ".."
]
biology = clean_texts(biology1+biology2, substrings_to_remove, delete_list=[0,1,2,3,4,5])
print("Text cleanup complete")


# Tokenize the text data using Recusive Character Text Splitter in langchain
print("Tokenizing the data using lanchain text splitter")
biology_tokens = tokenizer(biology, chunk_size=800)
english = tokenizer(english1 + english2, chunk_size=1300, tokens_per_chunk=384) #The token limit of the models 'sentence-transformers/all-mpnet-base-v2' is: 384.
History = tokenizer(socialscience1 + socialscience2, chunk_size=600)
Geography = tokenizer(socialscience3 + socialscience4, chunk_size=600)
print(f"Tokenization completed")

# Combine all tokenized texts into a single list
token_split_texts = biology_tokens + english + History + Geography
print(f"Documents split into {len(token_split_texts)} chunks")

token_split_texts = [token.replace('\n', ' ') for token in token_split_texts]
with open('text_data.txt', 'w', encoding='utf8') as file:
    file.write("\n\n".join(token_split_texts))

# Upload the tokenized texts to a Chroma collection
print("Upserting embedding data into Chroma ....")
ids = ["UID_" + str(i) for i in range(len(token_split_texts))]
collection.upsert(ids=ids, documents=token_split_texts)

if __name__ == '__main__':
    pass